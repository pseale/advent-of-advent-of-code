C:\a> node
Welcome to Node.js v13.7.0.
Type ".help" for more information.
> "FBFBBFFRLR"
'FBFBBFFRLR'
> "FBFBBFFRLR".replaceAll
undefined
> "FBFBBFFRLR".split("F").join("0")
'0B0BB00RLR'
> "FBFBBFFRLR".split("F").join("0").split("B").join("1")
'0101100RLR'
> "FBFBBFFRLR".split("F").join("0").split("B").join("1").split("
R").join("1")
'01011001L1'
> "FBFBBFFRLR".split("F").join("0").split("B").join("1").split("R").join("1").split("L").join("0")
'0101100101'
> parseInt( "FBFBBFFRLR".split("F").join("0").split("B").join("1").split("R").join("1").split("L").join("0"), 2)
357
> parseInt( "BFFFBBFRRR".split("F").join("0").split("B").join("1").split("R").join("1").split("L").join("0"), 2)
567
> parseInt( "FFFBBBFRRR".split("F").join("0").split("B").join("1").split("R").join("1").split("L").join("0"), 2)
119
> parseInt( "BBFFBBFRLL".split("F").join("0").split("B").join("1").split("R").join("1").split("L").join("0"), 2)
820
> let a = `BFBBBBBLLR
... BBFFBBFRRL
... FBFBFFFRRL
... BFBFFBFRLR
... BBBFFFFRLR
... REDACTED                  REDACTED
... FBFFBBFRLL
... FFBBFBFRLR
... BFFBFBBRLL
... BFBFBFFRRR
... FBBFFFBRLL
... '
...
> let a = `
...
> let a = `BFBBBBBLLR
... BBFFBBFRRL
... FBFBFFFRRL
... BFBFFBFRLR
... BBBFFFFRLR
... FBFFBBFRLL
... FFBBFBFRLR
... BFFBFBBRLL
... REDACTED                  REDACTED
... BFBFBFFRRR
... FBBFFFBRLL
... `
undefined
> a.split("\n").map(x=> x.trim()).filter(x => !x)
[ '' ]
> a.split("\n").map(x=> x.trim()).filter(x => x)
[
  'BFBBBBBLLR', 'BBFFBBFRRL', 'FBFBFFFRRL', 'BBFFFBFRRL', 'BFFBFBFRLL',
  'FFBBBFBLRL', 'BFFFBFFLLR', 'FBFFFFBLRR', 'FBFFBBBRRR', 'BFFBFFFLLR',
  'BFFFFFBLLL', 'FFBBFFBLRR', 'BFFFFFBRLR', 'FBFBFBFLLL', 'FFBFBFFLLL',
  'BBFFFFFLLL', 'FFFBBBFLLL', 'BBFFBFBLLR', 'FFBFBFBRRR', 'BFFBFFFRRR',
  'BBFFBFBRLR', 'FFFBFBFLRL', 'BBFFBBBLRR', 'FBBFFFFLLR', 'BBBFBBFLLL',
  'BFFFFBBRLL', 'FBBFBFBRRL', 'FFBBBFFRRR', 'BBFFFFBRRR', 'FBBBBFFLLR',
  'BFFFFFBLRR', 'FFBBFBFLLR', 'BFFBFBBLLL', 'BBFBBBBLLL', 'FBFBBBFRLL',
  'FFBFFFBLRL', 'FFFFBBBLRL', 'BBBBFBFRRR', 'FFBBFBBRLL', 'FFFBBBBRRL',
  'FFBFFFBRLR', 'BFBFBFBLLL', 'FFFBFFBLLL', 'BBFBFBBLRL', 'BBBBBFFLLL',
  'FBBBBFFRRR', 'FBFFFFBLLL', 'FFFFBBBRRL', 'FBFBBBFRRR', 'FBBFFBFLRL',
  'BFBFFBFLLR', 'FFBBBFBLLL', 'BFBFFFFLLL', 'BBBFFFFLLL', 'BFBBFBFRLR',
  'BFBBBBFLRL', 'BBBFBFBLRL', 'BFFFBFBLRL', 'BFBBBBBRLL', 'FBBBFFBRLL',
  'BFBFFBBRRL', 'BFFBBBFLLR', 'BFFBFFBRRR', 'FBFBFBFRRL', 'FBFBFBFLRL',
  'BBBFFFBRRR', 'FBFFBBFRRR', 'FFBBFFFRLL', 'BFBFBBBLLR', 'BFFFFBFLLR',
  'FFBBBBFRLR', 'FFFBFFFRRR', 'BFBBFFFRLL', 'BBBFBFFLRL', 'BFBBFBFLRR',
  'BBBBFBBLRL', 'FBFBFBFLRR', 'BBFBFBBLLL', 'BFBBBFBLRL', 'BFBBFBFLRL',
  'FFFBBFBLLL', 'BBBFBFBLLR', 'FBBBBBFLLR', 'FFBBBFBRLL', 'BBBBFBBRRL',
  'FBFFFBBRLL', 'BBFBBFFRRL', 'FBFFBFBLLL', 'BFFBFBBRRL', 'BFFFBFFRLR',
  'BBFBFBFRRR', 'FBBFBFFRRR', 'BBBFBFBLRR', 'FFBFFBFRLR', 'FFBFBBBLRL',
  'FFFFBBFRRL', 'FFBBBFBRLR', 'FBFBFBBLLL', 'FBBBFBFRLL', 'BBBBFBBLLR',
  ... 860 more items
]
> let b = a.split("\n").map(x=> x.trim()).filter(x => x)
undefined
> b.map(x => parseInt( x.split("F").join("0").split("B").join("1").split("R").join("1").split("L").join("0"), 2)).sort()
[
  100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
  112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
  124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
  136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
  148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
  160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
  172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
  184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
  196, 197, 198, 199,
  ... 860 more items
]
> let c = b.map(x => parseInt( x.split("F").join("0").split("B").join("1").split("R").join("1").split("L").join("0"), 2)).sort()

undefined
> c.length
960
> c[c.length - 1]
998
> for (let seat = 0; seat <= 998; seat++) {
... if (c.includes(seat-1) && c.includes(seat+1)) {
..... console.log(`Seat is ${seat}`)
..... } }
Seat is 39
Seat is 40
Seat is 41
Seat is 42
Seat is 43
 REDACTED                  REDACTED
Seat is 996
Seat is 997
undefined
> for (let seat = 0; seat <= 998; seat++) {
... if (c.includes(seat-1) && c.includes(seat+1) && !c.includes(seat) {
if (c.includes(seat-1) && c.includes(seat+1) && !c.includes(seat) {

  ^

Uncaught SyntaxError: Unexpected token '{'
> if (c.includes(seat-1) && c.includes(seat+1) && !c.includes(seat)) {
... console.log(`Seat is ${seat}`)
... } }
} }
  ^

Uncaught SyntaxError: Unexpected token '}'
>
(To exit, press ^C again or ^D or type .exit)
>
C:\a> node
Welcome to Node.js v13.7.0.
Type ".help" for more information.
> let a = `BFBBBBBLLR
... BBFFBBFRRL
... FBFBFFFRRL
... BBFFFBFRRL
... BFFBFBFRLL
 REDACTED                  REDACTED
... FBFFBBFRLL
... FFBBFBFRLR
... BFFBFBBRLL
... BFBFBFFRRR
... FBBFFFBRLL
... `
undefined
> function getSeatNumber(seatString) {
... return seatString.split("F").join("0").split("B").join("1").split("L").join("0").split("R").join("1")
... }
undefined
>
> getSeatNumber("BFFFBBFRRR")
'1000110111'
> function getSeatNumber(seatString) {
... return parseInt( seatString.split("F").join("0").split("B").join("1").split("L").join("0").split("R").join("1"), 2 )
... }
undefined
> getSeatNumber("BFFFBBFRRR")
567
> a
'BFBBBBBLLR\n' +
  'BBFFBBFRRL\n' +
  'FBFBFFFRRL\n' +
  'BFBFFBFRLR\n' +
  'BBBFFFFRLR\n' +
 REDACTED                  REDACTED
  'FBFFBBFRLL\n' +
  'FFBBFBFRLR\n' +
  'BFFBFBBRLL\n' +
  'BFBFBFFRRR\n' +
  'FBBFFFBRLL\n'
> let b = a.split("\n").map(x => x.trim()).filter(x => x)
undefined
> b
[
  'BFBBBBBLLR', 'BBFFBBFRRL', 'FBFBFFFRRL', 'BBFFFBFRRL', 'BFFBFBFRLL',
  'FFBBBFBLRL', 'BFFFBFFLLR', 'FBFFFFBLRR', 'FBFFBBBRRR', 'BFFBFFFLLR',
  'BFFFFFBLLL', 'FFBBFFBLRR', 'BFFFFFBRLR', 'FBFBFBFLLL', 'FFBFBFFLLL',
  'BBFFFFFLLL', 'FFFBBBFLLL', 'BBFFBFBLLR', 'FFBFBFBRRR', 'BFFBFFFRRR',
  'BBFFBFBRLR', 'FFFBFBFLRL', 'BBFFBBBLRR', 'FBBFFFFLLR', 'BBBFBBFLLL',
  'BFFFFBBRLL', 'FBBFBFBRRL', 'FFBBBFFRRR', 'BBFFFFBRRR', 'FBBBBFFLLR',
  'BFFFFFBLRR', 'FFBBFBFLLR', 'BFFBFBBLLL', 'BBFBBBBLLL', 'FBFBBBFRLL',
  'FFBFFFBLRL', 'FFFFBBBLRL', 'BBBBFBFRRR', 'FFBBFBBRLL', 'FFFBBBBRRL',
  'FFBFFFBRLR', 'BFBFBFBLLL', 'FFFBFFBLLL', 'BBFBFBBLRL', 'BBBBBFFLLL',
  'FBBBBFFRRR', 'FBFFFFBLLL', 'FFFFBBBRRL', 'FBFBBBFRRR', 'FBBFFBFLRL',
  'BFBFFBFLLR', 'FFBBBFBLLL', 'BFBFFFFLLL', 'BBBFFFFLLL', 'BFBBFBFRLR',
  'BFBBBBFLRL', 'BBBFBFBLRL', 'BFFFBFBLRL', 'BFBBBBBRLL', 'FBBBFFBRLL',
  'BFBFFBBRRL', 'BFFBBBFLLR', 'BFFBFFBRRR', 'FBFBFBFRRL', 'FBFBFBFLRL',
  'BBBFFFBRRR', 'FBFFBBFRRR', 'FFBBFFFRLL', 'BFBFBBBLLR', 'BFFFFBFLLR',
  'FFBBBBFRLR', 'FFFBFFFRRR', 'BFBBFFFRLL', 'BBBFBFFLRL', 'BFBBFBFLRR',
  'BBBBFBBLRL', 'FBFBFBFLRR', 'BBFBFBBLLL', 'BFBBBFBLRL', 'BFBBFBFLRL',
  'FFFBBFBLLL', 'BBBFBFBLLR', 'FBBBBBFLLR', 'FFBBBFBRLL', 'BBBBFBBRRL',
  'FBFFFBBRLL', 'BBFBBFFRRL', 'FBFFBFBLLL', 'BFFBFBBRRL', 'BFFFBFFRLR',
  'BBFBFBFRRR', 'FBBFBFFRRR', 'BBBFBFBLRR', 'FFBFFBFRLR', 'FFBFBBBLRL',
  'FFFFBBFRRL', 'FFBBBFBRLR', 'FBFBFBBLLL', 'FBBBFBFRLL', 'BBBBFBBLLR',
  ... 860 more items
]
> let seats = b.map(x => getSeatNumber(x))
undefined
> seats
[
  761, 822, 326, 790, 596, 234, 545, 267, 319, 577, 520, 203,
  525, 336, 160, 768, 112, 809, 175, 583, 813,  82, 827, 385,
  944, 540, 430, 231, 783, 481, 523, 209, 600, 888, 372, 138,
   58, 983, 220, 126, 141, 680,  72, 858, 992, 487, 264,  62,
  375, 402, 657, 232, 640, 896, 725, 754, 938, 554, 764, 460,
  670, 625, 591, 342, 338, 911, 311, 196, 697, 529, 245,  71,
  708, 930, 723, 986, 339, 856, 746, 722, 104, 937, 497, 236,
  990, 284, 870, 296, 606, 549, 855, 423, 939, 149, 186,  54,
  237, 344, 468, 985,
  ... 860 more items
]
> seats.sort
[Function: sort]
> seats
[
  761, 822, 326, 790, 596, 234, 545, 267, 319, 577, 520, 203,
  525, 336, 160, 768, 112, 809, 175, 583, 813,  82, 827, 385,
  944, 540, 430, 231, 783, 481, 523, 209, 600, 888, 372, 138,
   58, 983, 220, 126, 141, 680,  72, 858, 992, 487, 264,  62,
  375, 402, 657, 232, 640, 896, 725, 754, 938, 554, 764, 460,
  670, 625, 591, 342, 338, 911, 311, 196, 697, 529, 245,  71,
  708, 930, 723, 986, 339, 856, 746, 722, 104, 937, 497, 236,
  990, 284, 870, 296, 606, 549, 855, 423, 939, 149, 186,  54,
  237, 344, 468, 985,
  ... 860 more items
]
> seats[seats.length-1]
396
> seats.sort()
[
  100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
  112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
  124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135,
  136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147,
  148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
  160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
  172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183,
  184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
  196, 197, 198, 199,
  ... 860 more items
]
> seats[seats.length-1]
998
> for(let seat = 0; seat <= 998; seat++) {
... if (seats.contains(seat-1) && seats.contains(seat+1) && !seats.contains(seat)) {
..... console.log(`Seat is ${seat})
..... } }
... }
... }
... `
... } }
console.log(`Seat is ${seat})
                           ^^

Uncaught SyntaxError: missing ) after argument list
> if (seats.contains(seat-1) && seats.contains(seat+1) && !seats.contains(seat)) {
... console.log(`Seat is ${seat})
... console.log(`Seat is ${seat})
> for(let seat = 0; seat <= 998; seat++) {
... if (seats.contains(seat-1) && seats.contains(seat+1) && !seats.contains(seat)) {
..... console.log(`Seat is ${seat}`)
..... } }
Uncaught TypeError: seats.contains is not a function
> for(let seat = 0; seat <= 998; seat++) {
... if (seats.includes(seat-1) && seats.includes(seat+1) && !seats.includes(seat)) {
..... console.log(`Seat is ${seat}`)
..... } }
Seat is 676
undefined
> exit
Uncaught ReferenceError: exit is not defined
> exit
Uncaught ReferenceError: exit is not defined
> exit()
Uncaught ReferenceError: exit is not defined
> quit
Uncaught ReferenceError: quit is not defined
>
(To exit, press ^C again or ^D or type .exit)
>
