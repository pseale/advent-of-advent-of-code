Day 08 Part A
-------------

[x] read the problem
[x] scaffolding
[-] parse "signal patterns": line left of |
[x] parse "output values": line right of |
[x] identify numbers that match 1,4,7,8
- 1: 2 segments
- 7: 3 segments
- 4: 4 segments
- 8: 7 segments

Day 08 Part B
-------------

[x] read the problem
[x] scaffolding
- DEDUCE (identify) segments - use signal patterns as input
- parse outputvalue words into numbers. e.g. ab => 2
- sum outputvalues and return it for part B
- RETIRE TO TAHITI






SCRATCH
=======
  0:      1:      2:      3:      4:
 aaaa    ....    aaaa    aaaa    ....
b    c  .    c  .    c  .    c  b    c
b    c  .    c  .    c  .    c  b    c
 ....    ....    dddd    dddd    dddd
e    f  .    f  e    .  .    f  .    f
e    f  .    f  e    .  .    f  .    f
 gggg    ....    gggg    gggg    ....

  5:      6:      7:      8:      9:
 aaaa    aaaa    aaaa    aaaa    aaaa
b    .  b    .  .    c  b    c  b    c
b    .  b    .  .    c  b    c  b    c
 dddd    dddd    ....    dddd    dddd
.    f  e    f  .    f  e    f  .    f
.    f  e    f  .    f  e    f  .    f
 gggg    gggg    ....    gggg    gggg

           USED BY             NOT USED BY
segment a: 0 2 3 5 6 7 8 9     1 4
segment b: 0 4 5 6 8 9         1 2 3 7
segment c: 0 1 2 3 4 7 8 9     5 6
segment d: 2 3 4 5 6 8 9       0 1 7
segment e: 0 2 6 8             1 3 4 5 7 9
segment f: 0 1 3 4 5 6 7 8 9   2
segment g: 0 2 3 5 6 8 9       1 4 7


HOW TO DETERMINE NUMBERS, IN ORDER:
size 2                                            1
size 3                                            7
size 4                                            4
size 7                                            8
contains segments of '2', and has 6 segments     9,0?
the other one with 6 segments                     6

a segment => contained by 7, but not by 1

b segment => used by 5 glyphs total

c segment => the other segment, not a, used by 8 glyphs total

d segment => used by 7 glyphs total, INCLUDING '4'

e segment => used by 4 glyphs total

f segment => used by 9 glyphs total 

g segment => used by 7 glyphs total, NOT INCLUDING '4'


an array that has:
['a', 'a', 'a', 'a', 'a', 'b', 'b
array.where(x => x == 'a').Count();


a = BottomRight
b = TopRight
...etc

'unknown number' = 'ab'

  0:      1:      2:      3:      4:
 aaaa    ....    aaaa    aaaa    ....
b    c  .    c  .    c  .    c  b    c
b    c  .    c  .    c  .    c  b    c
 ....    ....    dddd    dddd    dddd
e    f  .    f  e    .  .    f  .    f
e    f  .    f  e    .  .    f  .    f
 gggg    ....    gggg    gggg    ....

  5:      6:      7:      8:      9:
 aaaa    aaaa    aaaa    aaaa    aaaa
b    .  b    .  .    c  b    c  b    c
b    .  b    .  .    c  b    c  b    c
 dddd    dddd    ....    dddd    dddd
.    f  e    f  .    f  e    f  .    f
.    f  e    f  .    f  e    f  .    f
 gggg    gggg    ....    gggg    gggg



























